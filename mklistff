#!/usr/bin/env bash

set -euo pipefail

USAGE="usage: $0 <screen name>"

if ! command -v twurl &>/dev/null; then
  echo "run: $ gem install twurl" >&2
  exit 1
elif ! command -v jq &>/dev/null; then
  echo "install: jq" >&2
  exit 1
elif ! [ -f ~/.twurlrc ]; then
  echo "run: $ twurl authorize -c <consumer key> -s <consumer seckey>" >&2
  exit 1
elif [ $# -ne 1 ]; then
  echo "error: invalid arity $#, expected 1">&2
  echo "$USAGE" >&2
  exit 1
elif ! [[ "$1" =~ ^[a-zA-Z0-9_]+$ ]]; then
  echo "error: invalid name $1" >&2
  echo "$USAGE" >&2
  exit 1
fi

:>"${1}.followers.jsonl"
:>"${1}.followings.jsonl"

cursor=-1
while { [ "$cursor" -ne 0 ] && [ -n "$cursor" ];}; do
  res="$(
    twurl "/1.1/followers/list.json?screen_name=${1}&count=200&cursor=${cursor}"
  )"
  if echo "$res" | grep -q '^{"errors":'; then
    echo "error: response is invalid">&2
    echo "$res"
    exit 1
  fi
  cursor="$(
    echo "$res" | jq '.next_cursor'
  )"
  echo "$res" >> "${1}.followers.jsonl"
  sleep "$((RANDOM%5+3))s"
done

cursor=-1
while { [ "$cursor" -ne 0 ] && [ -n "$cursor" ];}; do
  res="$(
    twurl "/1.1/friends/list.json?screen_name=${1}&count=200&cursor=${cursor}"
  )"
  if echo "$res" | grep -q '^{"errors":'; then
    echo "error: response is invalid">&2
    echo "$res"
    exit 1
  fi
  cursor="$(
    echo "$res" | jq '.next_cursor'
  )"
  echo "$res" >> "${1}.followings.jsonl"
  sleep "$((RANDOM%5+3))s"
done
